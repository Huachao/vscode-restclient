{
  "name": "rest-client",
  "displayName": "REST Client",
  "description": "REST Client for Visual Studio Code",
  "version": "0.18.4",
  "publisher": "humao",
  "author": {
    "name": "Huachao Mao",
    "email": "huachaomao@gmail.com"
  },
  "icon": "images/rest_icon.png",
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Huachao/vscode-restclient/issues",
    "email": "huachaomao@gmail.com"
  },
  "homepage": "https://github.com/Huachao/vscode-restclient/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/Huachao/vscode-restclient.git"
  },
  "engines": {
    "vscode": "^1.23.0"
  },
  "categories": [
    "Other",
    "Snippets",
    "Programming Languages"
  ],
  "keywords": [
    "REST",
    "Http",
    "multi-root ready"
  ],
  "activationEvents": [
    "onCommand:rest-client.request",
    "onCommand:rest-client.history",
    "onCommand:rest-client.clear-history",
    "onCommand:rest-client.save-response",
    "onCommand:rest-client.save-response-body",
    "onCommand:rest-client.switch-environment",
    "onCommand:rest-client.clear-aad-token-cache",
    "onLanguage:http"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "languages": [
      {
        "id": "http",
        "aliases": [
          "HTTP",
          "Http",
          "http"
        ],
        "extensions": [
          ".http",
          ".rest"
        ],
        "firstLine": "^(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|CONNECT|TRACE)\\s+(.*?)HTTP/[0-9\\.]+$",
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "http",
        "scopeName": "source.http",
        "path": "./syntaxes/http.tmLanguage"
      }
    ],
    "snippets": [
      {
        "language": "http",
        "path": "./snippets/http.json"
      },
      {
        "language": "plaintext",
        "path": "./snippets/http.json"
      }
    ],
    "commands": [
      {
        "command": "rest-client.request",
        "title": "Send Request",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.rerun-last-request",
        "title": "Rerun Last Request",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.cancel-request",
        "title": "Cancel Request",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.switch-environment",
        "title": "Switch Environment",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.history",
        "title": "View Request History",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.clear-history",
        "title": "Clear Request History",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.save-response",
        "title": "Save Full Response",
        "icon": {
          "light": "./images/save.svg",
          "dark": "./images/save-inverse.svg"
        },
        "category": "Rest Client"
      },
      {
        "command": "rest-client.save-response-body",
        "title": "Save Response Body",
        "icon": {
          "light": "./images/save-body.svg",
          "dark": "./images/save-body-inverse.svg"
        },
        "category": "Rest Client"
      },
      {
        "command": "rest-client.generate-codesnippet",
        "title": "Generate Code Snippet",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.copy-codesnippet",
        "title": "Copy Code Snippet",
        "icon": {
          "light": "./images/copy.svg",
          "dark": "./images/copy-inverse.svg"
        },
        "category": "Rest Client"
      },
      {
        "command": "rest-client.copy-request-as-curl",
        "title": "Copy Request As cURL",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.clear-aad-token-cache",
        "title": "Clear Azure AD Token Cache",
        "category": "Rest Client"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "httpResponsePreviewFocus",
          "command": "rest-client.save-response",
          "group": "navigation"
        },
        {
          "when": "httpResponsePreviewFocus",
          "command": "rest-client.save-response-body",
          "group": "navigation"
        },
        {
          "when": "codeSnippetPreviewFocus",
          "command": "rest-client.copy-codesnippet",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "rest-client.request",
          "when": "editorTextFocus && editorLangId == http",
          "group": "rest-client@1"
        },
        {
          "command": "rest-client.generate-codesnippet",
          "when": "editorTextFocus && editorLangId == http",
          "group": "rest-client@2"
        },
        {
          "command": "rest-client.copy-request-as-curl",
          "when": "editorTextFocus && editorLangId == http",
          "group": "rest-client@3"
        }
      ]
    },
    "keybindings": [
      {
        "command": "rest-client.request",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "rest-client.request",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      },
      {
        "command": "rest-client.rerun-last-request",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "rest-client.rerun-last-request",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      },
      {
        "command": "rest-client.rerun-last-request",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "httpResponsePreviewFocus"
      },
      {
        "command": "rest-client.cancel-request",
        "key": "ctrl+alt+k",
        "mac": "cmd+alt+k",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "rest-client.cancel-request",
        "key": "ctrl+alt+k",
        "mac": "cmd+alt+k",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      },
      {
        "command": "rest-client.history",
        "key": "ctrl+alt+h",
        "mac": "cmd+alt+h"
      },
      {
        "command": "rest-client.switch-environment",
        "key": "ctrl+alt+e",
        "mac": "cmd+alt+e"
      },
      {
        "command": "rest-client.generate-codesnippet",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "rest-client.generate-codesnippet",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "REST Client configuration",
      "properties": {
        "rest-client.followredirect": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Follow HTTP 3xx responses as redirects."
        },
        "rest-client.defaultHeaders": {
          "type": "object",
          "default": {
            "User-Agent": "vscode-restclient"
          },
          "scope": "resource",
          "description": "If particular headers are omitted in request header, these will be added as headers for each request."
        },
        "rest-client.timeoutinmilliseconds": {
          "type": "integer",
          "default": 0,
          "scope": "resource",
          "description": "Timeout in milliseconds. 0 for infinity"
        },
        "rest-client.showResponseInDifferentTab": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Show response in different tab"
        },
        "rest-client.rememberCookiesForSubsequentRequests": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Remember cookies for subsequent requests"
        },
        "rest-client.enableTelemetry": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Send out anonymous usage data"
        },
        "rest-client.excludeHostsForProxy": {
          "type": "array",
          "default": [],
          "scope": "resource",
          "description": "Excluded hosts when using using proxy settings"
        },
        "rest-client.fontSize": {
          "type": "number",
          "default": null,
          "scope": "resource",
          "description": "Controls the font size in pixels used in the response preview"
        },
        "rest-client.fontFamily": {
          "type": "string",
          "default": null,
          "scope": "resource",
          "description": "Controls the font family used in the response preview"
        },
        "rest-client.fontWeight": {
          "type": "string",
          "enum": [
            "normal",
            "bold",
            "bolder",
            "lighter",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ],
          "scope": "resource",
          "description": "Controls the font weight used in the response preview"
        },
        "rest-client.environmentVariables": {
          "type": "object",
          "default": {
            "$shared": {}
          },
          "scope": "resource",
          "description": "Sets the environments and custom variables belongs to it, especially the special environment name '$shared' is used to create variables shared across all the individual environments (e.g., {\"$shared\": {\"version\": \"v1\"}, \"production\": {\"host\": \"api.example.com\"}, \"sandbox\":{\"host\":\"sandbox.api.example.com\"}})",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "default": {},
                "description": "Sets the custom variables belong to this environment",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string",
                      "description": "Value of the custom variable"
                    }
                  ]
                }
              }
            ]
          }
        },
        "rest-client.mimeAndFileExtensionMapping": {
          "type": "object",
          "default": {},
          "scope": "resource",
          "description": "Sets the custom mapping of mime type and file extension of saved response body (e.g., {\"application/atom+xml\": \"xml\"})"
        },
        "rest-client.previewResponseInUntitledDocument": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Preview response in untitled document if set to true, otherwise displayed in html view"
        },
        "rest-client.previewResponseSetUntitledDocumentLanguageByContentType": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Attempt to automatically set document language based on Content-Type header when showing each response in new tab"
        },
        "rest-client.includeAdditionalInfoInResponse": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Include additional information such as request URL and response time when preview is set to use untitled document"
        },
        "rest-client.certificates": {
          "type": "object",
          "default": {},
          "scope": "resource",
          "description": "Certificate paths for different hosts. The path can be absolute path or relative path(relative to workspace or current http file)",
          "pattern": "^(?!http(s?)://)",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "default": {},
                "description": "Certifcate paths for specific host(e.g., foo.com, bar.org:8081), port is optional",
                "properties": {
                  "cert": {
                    "type": "string",
                    "description": "Absolute or relative path of Public x509 certificate"
                  },
                  "key": {
                    "type": "string",
                    "description": "Absolute or relative path of Private key"
                  },
                  "pfx": {
                    "type": "string",
                    "description": "Absolute or relative path of PKCS #12 certificate"
                  },
                  "passphrase": {
                    "type": "string",
                    "description": "[Optional] A string of passphrase for the private key or pfx"
                  }
                },
                "dependencies": {
                  "cert": [
                    "key"
                  ],
                  "key": [
                    "cert"
                  ]
                }
              }
            ]
          }
        },
        "rest-client.useTrunkedTransferEncodingForSendingFileContent": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Use trunked transfer encoding for sending file content as request body"
        },
        "rest-client.suppressResponseBodyContentTypeValidationWarning": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Suppress response body content type validation"
        },
        "rest-client.previewOption": {
          "type": "string",
          "enum": [
            "full",
            "headers",
            "body",
            "exchange"
          ],
          "default": "full",
          "scope": "resource",
          "description": "Response preview output option. 'full' for whole response message(status line, headers and body). 'headers' for response headers(as well as status line). 'body' for response body only. 'exchange' for whole HTTP exchange (request and response)"
        },
        "rest-client.showEnvironmentStatusBarItem": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Show environment picker in status bar"
        },
        "rest-client.disableHighlightResonseBodyForLargeResponse": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Controls whether to highlight response body for response whose size is larger than limit specified by 'rest-client.largeResponseSizeLimitInMB'"
        },
        "rest-client.disableAddingHrefLinkForLargeResponse": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Controls whether to add href link in previewed response for response whose size is larger than limit specified by 'rest-client.largeResponseSizeLimitInMB'"
        },
        "rest-client.largeResponseBodySizeLimitInMB": {
          "type": "number",
          "default": 5,
          "minimum": 0,
          "exclusiveMinimum": true,
          "scope": "resource",
          "description": "Set the response body size threshold of MB to identify whether a response is a so-called 'large response', only used when 'rest-client.disableHighlightResonseBodyForLargeResponse' and/or 'rest-client.disableAddingHrefLinkForLargeResponse' is set to true"
        },
        "rest-client.previewResponseInActiveColumn": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Preview response in current active column"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "tslint": "tslint --project tsconfig.json"
  },
  "devDependencies": {
    "@types/fs-extra": "^5.0.1",
    "@types/mocha": "^2.2.32",
    "@types/node": "^6.0.40",
    "mocha": "^3.2.0",
    "tslint": "^4.2.0",
    "typescript": "^2.6.2",
    "vscode": "^1.0.0"
  },
  "dependencies": {
    "adal-node": "^0.1.26",
    "applicationinsights": "^1.0.2",
    "autolinker": "^1.4.0",
    "code-highlight-linenums": "^0.2.1",
    "combined-stream": "^1.0.5",
    "copy-paste": "^1.3.0",
    "elegant-spinner": "^1.0.1",
    "encodeurl": "^1.0.1",
    "filesize": "^3.3.0",
    "fs-extra": "^5.0.0",
    "highlight.js": "^9.6.0",
    "httpsnippet": "^1.16.5",
    "iconv-lite": "^0.4.15",
    "jsonc-parser": "^1.0.3",
    "jsonpath": "^1.0.0",
    "mime-types": "^2.1.14",
    "moment": "^2.20.1",
    "node-uuid": "^1.4.7",
    "pretty-data": "^0.40.0",
    "request": "^2.81.0",
    "tmp": "^0.0.31",
    "tough-cookie-file-store-bugfix": "Huachao/tough-cookie-file-store-bugfix",
    "xmldom": "^0.1.27",
    "xpath": "0.0.27",
    "yargs": "^6.0.0"
  }
}
